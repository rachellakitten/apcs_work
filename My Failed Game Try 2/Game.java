import processing.core.*;
import java.util.*;
public class Game extends PApplet{
  public void settings(){
    size(1410, 810);
  }
  public void setup(){
    int[][] one = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,2},
      {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,2},
      {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1},
      {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1},
      {1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1},
      {1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1},
      {1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1},
      {1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,1},
      {1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1},
      {1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1},
      {1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1},
      {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
      {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
      {1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
      {1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
      {1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1},
      {1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

    p = new Player(this);
    blocks = new ArrayList<Block>();
    exits = new ArrayList<Exit>();

    for(int i = 0; i < one.length; i++){
      for(int j = 0; j < one[i].length; j++){
        int x = 60*j;
        int y = 60*i;
        if(one[i][j] == 1){
          blocks.add(new Block(this, x+30, y+30));
        }else if(one[i][j] == 2){
          exits.add(new Exit(this, x+30, y+30));
        }
      }
    }

  }
  public void draw(){
    if(gameState == 0){
      background(0);
      textSize(50);
      text("Welcome to maze game! Click to start :D", 300, 405);
    }
    if(gameState == 1){
    background(0);
    translate(-p.getX()+width/2, -p.getY()+height/2);

    for(Block b : blocks){
      b.display();
    }


    for(Exit e : exits){
      e.display();
    }

    p.display(blocks, exits);

    if(p.passed == true){
      gameState = 2;
    }

  }
  if(gameState == 2){
    blocks.clear();
    exits.clear();
    background(0);
    fill(255);
    text("Congrats on passing! Click to next level :D", 300, 405);
  }
  if(gameState == -1){
    blocks.clear();
    exits.clear();
    background(0);
    fill(255);
    text("RIP you died :(. Click to play again", 300, 405);
  }
}
  public void keyPressed(){
    if(key == 'w'){
      up = true;
    }else if(key == 'a'){
      left = true;
    }else if(key == 's'){
      down = true;
    }else if(key == 'd'){
      right = true;
    }

    if(up == true && down == false){
      p.setVY(-1);
    }else if(down == true && up == false){
      p.setVY(1);
    }else if(left == true && right == false){
      p.setVX(-1);
    }else if(right == true && left == false){
      p.setVX(1);
    }
  }
  public void mousePressed(){
    if(gameState == 0){
      background(0);
      gameState = 1;
    }
  }
  public void keyReleased(){
    if(key == 'w'){
      up = false;
    }else if(key == 'a'){
      left = false;
    }else if(key == 's'){
      down = false;
    }else if(key == 'd'){
      right = false;
    }
    if(up == false && down == false){
      p.setVY(0);
    }
    if(left == false && right == false){
      p.setVX(0);
    }
  }
  public static void main(String[] args){
    PApplet.main("Game");
  }
  private Player p;
  private ArrayList<Block> blocks;
  private ArrayList<Exit> exits;
  private boolean up = false;
  private boolean down = false;
  private boolean left = false;
  private boolean right = false;
  private int gameState = 0;
  private int c = this.color(153, 76, 0);
}
